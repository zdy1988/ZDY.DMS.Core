@page
@model ZDY.DMS.Web.Pages.WorkFlow.WorkFlowTaskExecuteModel
@using ZDY.DMS.Services.WorkFlowService.Core.Enums
@using ZDY.DMS.Services.WorkFlowService.Core.Extensions

@if (ViewData["ErrorMessage"] != null)
{

    <h2>@ViewData["ErrorMessage"]</h2>

    return;
}

@if (Model.CurrentTask.Is(WorkFlowTaskState.Waiting))
{
    <alert state="Danger">
        <strong>提醒</strong> 此任务还需其他人员处理后才能处理！
    </alert>
}

<div class="row">
    <div class="@(Model.CanExecute ? "col-md-8" : "col-md-12")">
        <portlet title="@Model.Instance.Title" data-model="flow-instance">

            <portlet-header-action-container>
                <button state="Warning" hover-mode="Air" data-bind="click:handleShowProcess">查看审批过程</button>
            </portlet-header-action-container>


            <div id="fb-render" style="min-height: 600px;"></div>

        </portlet>
    </div>

    @if (Model.CanExecute)
    {
        <div class="col-md-4">
            <portlet title="审批流程" data-model="flow-instance" is-height-fluid="true">
                @{
                    var isMultiSelect = !Model.CurrentStep.IsControlBy(WorkFlowControlKinds.SingleSelect);

                    var isControlBySystem = Model.CurrentStep.IsControlBy(WorkFlowControlKinds.System);
                }

                @if (!Model.CurrentStep.IsControlBy(WorkFlowControlKinds.System))
                {
                    <section>
                        <p>可选择步骤：</p>
                        <div class="row" data-bind="foreach:NextSteps">
                            <div class="col-md-12">
                                <p class="mb-1">
                                    <check-box is-multi-select="@isMultiSelect" field="IsChecked" style="padding-left: 18px;"></check-box>
                                    <!-- ko text:StepName --><!-- /ko -->
                                </p>
                                <div data-bind="if:HandlerType==0">
                                    <select-box name="选择步骤处理者" options="@Model.UserOptions" is-place-holder-destroyed="true" rows="3" bind="attr:{id: StepId} ,select2: {placeholder: '请选择...', width: '100%', multiple: true, value: $data.Handlers}"></select-box>
                                </div>
                            </div>
                        </div>
                    </section>

                    <separator></separator>
                }

                <div class="row">
                    <div class="col-md-12">
                        <select-box name="抄送至" options="@Model.UserOptions" is-place-holder-destroyed="true" rows="3" bind="select2: {placeholder: '请选择...', width: '100%', multiple: true, value: CopyTo}"></select-box>

                        @if (Model.CurrentStep.SignatureType != (int)WorkFlowSignatureKinds.NoComment)
                        {

                            <text-box name="处理意见" field="Comment" kind="Textarea"></text-box>

                        }

                        @if (Model.CurrentStep.SignatureType == (int)WorkFlowSignatureKinds.CommentAndSignature)
                        {

                            <text-box name="签名密钥" field="SignaturePassword" kind="Password"></text-box>

                        }
                    </div>
                </div>

                <portlet-footer-action-container align="Right">
                    <button icon="MailForward" state="Info" size="Sm" data-bind="click:handlePreRedirect">转交</button>

                    @if (!Model.CurrentStep.IsBackTacticBy(WorkFlowBackTacticKinds.UnableToReturn))
                    {

                        <button icon="Close" state="Warning" size="Sm" data-bind="click:handleBack">退回</button>

                    }

                    @if (Model.NextSteps.Count() > 0)
                    {
                        <button icon="Check" state="Success" size="Sm" data-bind="click:handleSubmit">处理</button>
                    }
                    else
                    {
                        <button icon="Check" state="Success" size="Sm" data-bind="click:handleComplate">同意</button>
                    }

                </portlet-footer-action-container>

            </portlet>
        </div>
    }

</div>

@if (Model.CurrentStep.IsShowComment && Model.HasCommentTasks.Count > 0)
{

    <div class="row" data-model="flow-instance">
        <div class="col-md-12">
            <portlet title="审批意见">
                <div class="row">
                    <div class="col-md-12">
                        <div class="todo-tasklist">

                            @foreach (var opinion in Model.HasCommentTasks)
                            {

                                <div class="todo-tasklist-item todo-tasklist-item-border-green">
                                    <img class="todo-userpic pull-left" src="/assets/layouts/layout2/img/avatar4.jpg" style="width:27px; height:27px;">
                                    <div class="todo-tasklist-item-title"> @opinion.ReceiverName </div>
                                    <div class="todo-tasklist-item-text"> @(string.IsNullOrEmpty(opinion.Comment.Trim()) ? "无审批意见" : opinion.Comment) </div>
                                    <div class="todo-tasklist-controls pull-left">
                                        <span class="todo-tasklist-date">
                                            <i class="fa fa-calendar"></i> @opinion.ExecutedTime
                                        </span>
                                        <lable theme="Success" class-names="todo-tasklist-lable" data-bind="state: $root.dic('WorkFlowTaskState', '@opinion.State', true)">@opinion.GetTaskStateName()</lable>
                                    </div>
                                </div>

                            }

                        </div>
                    </div>
                </div>

            </portlet>
        </div>
    </div>
}

<div data-model="flow-instance">

    <modal title="转交任务" id="model-redirect-task">
        <div class="row">
            <div class="col-md-12">
                <select-box field="RedirectHandler" is-bind-computed="true" name="选择转交处理人" options="@Model.UserOptions" is-place-holder-destroyed="true"></select-box>
            </div>
        </div>
        <modal-footer>
            <button state="Success" data-bind="click:handleRedirect">确认转交</button>
        </modal-footer>
    </modal>

    <modal title="审批过程" id="modal-work-process" size="Lg">
        <div class="row">
            <div class="col-md-12">
                <iframe src="/WorkFlow/WorkFlowProcess?id=@Model.CurrentTask.InstanceId" frameborder="0" scrolling="no" style="width: 100%; border: none; height: 480px;"></iframe>
            </div>
        </div>
    </modal>

</div>

@section styles{
    <style type="text/css">
        .rendered-form .fb-radio-group .radio-inline input + label {
            margin-bottom: 1px;
        }

        .todo-tasklist {
            padding: 0;
        }

        .todo-tasklist-item-border-green {
            border-left: #3faba4 2px solid;
        }

        .todo-tasklist-item-border-blue {
            border-left: #4c87b9 2px solid;
        }

        .todo-tasklist-item-border-purple {
            border-left: #8877a9 2px solid;
        }

        .todo-tasklist-item-border-red {
            border-left: #d05454 2px solid;
        }

        .todo-tasklist-item-border-yellow {
            border-left: #d4ad38 2px solid;
        }

        .todo-tasklist-item {
            background: #f6fbfc;
            padding: 10px;
            margin-bottom: 10px;
            margin-bottom: 15px;
            overflow: hidden;
        }

            .todo-tasklist-item:last-child {
                margin-bottom: 0px;
            }

        div .todo-tasklist-item:hover {
            cursor: pointer;
            background-color: #edf7f9;
        }

        .todo-tasklist-item img {
            margin: 0 10px 10px 0;
        }

        .todo-tasklist-item-title {
            font-size: 15px;
            color: #2b4a5c;
            font-weight: 600;
            padding-top: 3px;
            padding-bottom: 13px;
        }

        .todo-tasklist-item-text {
            font-size: 13px;
            color: #577688;
            padding-bottom: 5px;
        }

        .todo-tasklist-item ul {
            margin: 5px 0 0 0px;
        }

        .todo-tasklist-item li {
            color: #577688;
            font-size: 13px;
            margin-right: 10px;
            margin-bottom: 5px;
            padding: 0 !important;
        }

            .todo-tasklist-item li i {
                color: #b3bfcb;
                font-size: 15px;
            }

        .todo-tasklist-controls {
            margin-top: 5px;
        }

        .todo-tasklist-date {
            color: #637b89 !important;
            margin-right: 12px;
        }

            .todo-tasklist-date i {
                color: #abbfca !important;
                margin-right: 5px;
            }

        #modal-work-process .modal-body {
            padding: 0px;
        }
    </style>
}

@section scripts{
    <script src="/js/workflow/form-render.min.js"></script>

    <script type="text/javascript">
        var formData = @Html.Raw(Model.Instance.FormJson)

        var data = @Html.Raw(Model.Instance.FormDataJson)

        var nextSteps = @Html.Raw(JsonConvert.SerializeObject(Model.NextSteps));

        var formRender = function () {
            for (var i = 0; i < formData.length; i++) {
                formData[i].disabled = true;
                for (var field in data) {
                    if (field == formData[i].name) {
                        formData[i].value = data[field]
                    }
                }
            }

            return $('#fb-render').formRender({
                dataType: 'json',
                formData: JSON.stringify(formData),
                notify: {
                    error: function (message) {
                        return console.error(message);
                    },
                    success: function (message) {
                        $("*[required=required]").each(function () {
                            $(this).attr("data-rule", "required")
                        })

                        return console.log(message);
                    },
                    warning: function (message) {
                        return console.warn(message);
                    }
                }
            });
        }();

        var flowInstance = zdy.module().import(function () {

            this.dic(dictionary)

            this.CopyTo = ko.observable()

            this.Comment = ko.observable("")

            this.SignaturePassword = ko.observable("")

            this.GetExecuteModel = function (steps) {

                var ExecuteModel = function () {
                    this.TaskId = '@Model.CurrentTask.Id'
                    this.Steps = steps || [],
                    this.Comment = flowInstance.Comment(),
                    this.SignaturePassword = flowInstance.SignaturePassword()
                    this.IsSign = false,
                    this.Note = ''
                }

                return new ExecuteModel()

            };

            nextSteps = nextSteps.map(function (item) {

                item.IsChecked = false
                item.Handlers = ko.observable()

                return item
            });

            this.NextSteps = ko.observableArray(nextSteps)

            this.GetSelectNextSteps = function () {
                var result = []
                var steps = this.NextSteps()
                steps.map(function (item) {
                    if (item.IsChecked) {
                        var stepId = item.StepId
                        var stepHandler = item.Handlers()
                        if (stepHandler) {
                            result.push({
                                Key: stepId,
                                Value: stepHandler.split(",").map(function (item) {
                                    return {
                                        Id: item
                                    }
                                })
                            });
                        }
                    }
                });
                return result
            }

            this.handleSubmit = function () {
                var steps = this.GetSelectNextSteps()

                var execute = flowInstance.GetExecuteModel(steps)

                zdy.ajaxPost("WorkFlowHost/ExcuteSubmit", { execute: execute }).done(function (rst) {
                    if (rst.IsSuccess) {
                        zdy.toastr.success("操作成功");
                        zdy.replacePage("/WorkFlow/WorkFlowTaskManager")
                    }

                })
            }

            this.handleComplate = function () {
                zdy.confirm("确认同意此次操作？").done(function () {
                    flowInstance.handleSubmit()
                })
            }

            this.handleBack = function () {
                zdy.confirm("确认退回此次操作？").done(function () {
                    var execute = flowInstance.GetExecuteModel()

                    zdy.ajaxPost("WorkFlowHost/ExcuteBack", { execute: execute }).done(function (rst) {

                        if (rst.IsSuccess) {
                            zdy.toastr.success("操作成功");
                            zdy.replacePage("/WorkFlow/WorkFlowTaskManager")
                        }

                    })
                })
            }

            this.RedirectHandler = ko.observable()

            this.handlePreRedirect = function () {
                zdy.modal.show("model-redirect-task")
            }

            this.handleRedirect = function () {
                zdy.confirm("确认转交此项任务？").done(function () {
                    var handler = flowInstance.RedirectHandler()

                    if (handler == undefined || handler == "") {
                        return
                    }

                    var steps = [{
                        Key: '@(Model.CurrentTask.StepId)',
                        Value: [{ Id: handler }]
                    }]

                    var execute = flowInstance.GetExecuteModel(steps)

                    zdy.ajaxPost("WorkFlowHost/ExcuteRedirect", { execute: execute }).done(function (rst) {

                        if (rst.IsSuccess) {
                            zdy.toastr.success("操作成功");
                            zdy.replacePage("/WorkFlow/WorkFlowTaskManager")
                        }

                    })
                })
            }

            this.handleShowProcess = function () {
                zdy.modal.show("modal-work-process");
            }

        }).bind("flow-instance");

    </script>

}
