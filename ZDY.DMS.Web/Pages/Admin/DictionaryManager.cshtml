@page
@model ZDY.DMS.Web.Pages.Admin.DictionaryManagerModel

<div class="row">
    <div class="col-md-6">
        <portlet title="字典管理">
            <section data-model="key-form">
                <div class="row">
                    <div class="col-md-6">
                        <text-box field="Name" is-required="true" name="名称"></text-box>
                    </div>
                    <div class="col-md-6">
                        <text-box field="Code" is-required="true" name="标识"></text-box>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <text-box field="Order" is-required="true" name="排序" text-box-type="Number"></text-box>
                    </div>
                    <div class="col-md-6">
                        <select-box field="Type" is-required="true" name="类型" options="@Model.DictionaryKinds"></select-box>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 kt-align-right">
                        <button size="Sm" data-bind="click:reset">重置</button>
                        <button size="Sm" state="Danger" data-bind="click:$root.delete, visible:Id()">删除</button>
                        <button size="Sm" state="Success" data-bind="click:update, visible:Id()">修改</button>
                        <button size="Sm" state="Success" data-bind="click:add, visible:!Id()">新增标识</button>
                    </div>
                </div>
            </section>
            <separator />
            <div class="row" data-model="key-table">
                <div class="col-md-12">
                    <data-table is-show-checkbox-column="false" row-click-funtion="handleRowClick">
                        <cell filed="Name"></cell>
                        <cell filed="Code"></cell>
                        <cell filed="Order"></cell>
                        <cell>
                            <lable data-bind="state: $root.dic('DictionaryKinds', Type, true)"></lable>
                        </cell>
                        <cell>
                            <button size="Sm" state="Brand" is-only-icon="true" icon="Edit" data-bind="click:$root.handleDetail"/>
                        </cell>
                    </data-table>
                    <pager></pager>
                </div>
            </div>
        </portlet>
    </div>
    <div class="col-md-6">
        <portlet title="字典数据" is-height-fluid="true">
            <section data-model="value-form">
                <div class="row">
                    <div class="col-md-6">
                        <text-box field="Name" is-required="true" name="名称"></text-box>
                    </div>
                    <div class="col-md-6">
                        <text-box field="Order" is-required="true" name="排序" text-box-type="Number"></text-box>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <text-box field="Value" is-required="true" name="值"></text-box>
                    </div>
                    <div class="col-md-6">
                        <text-box field="ParentValue" name="父级值"></text-box>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 kt-align-right">
                        <button size="Sm" data-bind="click:reset">重置</button>
                        <button size="Sm" state="Danger" data-bind="click:$root.delete, visible:Id()">删除</button>
                        <button size="Sm" state="Success" data-bind="click:update, visible:Id()">修改</button>
                        <button size="Sm" state="Success" data-bind="click:add, visible:!Id(), enable:DictionaryKey()">新增数据</button>
                    </div>
                </div>
            </section>
            <separator />
            <div class="row" data-model="value-table">
                <div class="col-md-12">
                    <data-table is-show-checkbox-column="false">
                        <cell filed="Name"></cell>
                        <cell filed="Value" style="overflow:auto; white-space: normal;"></cell>
                        <cell filed="ParentValue"></cell>
                        <cell filed="Order"></cell>
                        <cell>
                            <button size="Sm" state="Brand" is-only-icon="true" icon="Edit" data-bind="click:$root.handleDetail"/>
                        </cell>
                    </data-table>
                </div>
            </div>
        </portlet>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        var dictionary = JSON.parse(' @Html.Raw(JsonConvert.SerializeObject(Model.Dictionary)) ')

        var keyTable = zdy.table().options({
            headers: [
                { text: '名称', field: 'Name', width: 'auto' },
                { text: '标识', field: 'Code', width: 'auto' },
                { text: '排序', field: 'Order', width: 'auto' },
                { text: '类型', field: 'Type', width: 'auto' }
            ],
            defaultOrderBy: "Order",
            dataQueryUrl: 'DictionaryKey/Search'
        }).import(function () {

            this.dic(dictionary)

            this.handleRowClick = function (data) {
                valueTable.DictionaryKey(data.Code)
                valueForm.DictionaryKey(data.Code)
                valueTable.search()
            }

            this.handleDetail = function (data, e) {
                keyForm.load(data)
            }

        }).bind("key-table").load()

        var keyForm = zdy.form().options({
            fields: [
                { field: 'Id', value: ko.observable() },
                { field: 'Name', value: ko.observable() },
                { field: 'Code', value: ko.observable() },
                { field: 'Order', value: ko.observable() },
                { field: 'Type', value: ko.observable() }
            ],
            dataAddUrl: 'DictionaryKey/Add',
            dataUpdateUrl: 'DictionaryKey/Update',
            dataDeleteUrl: 'DictionaryKey/Delete'
        }).import(function () {

            this.afterAdd = function () {
                this.reset();
                keyTable.search()
            }

            this.afterUpdate = function () {
                this.reset();
                keyTable.search()
            }

            this.afterDelete = function () {
                this.reset();
                keyTable.search()
            }

        }).bind("key-form")

        var valueTable = zdy.table().options({
            fields: [
                { field: 'DictionaryKey', value: ko.observable(), method: zdy.querymethod.equal }
            ],
            headers: [
                { text: '名称', field: 'Name', width: 'auto' },
                { text: '当前值', field: 'Value', width: 'auto' },
                { text: '父级值', field: 'ParentValue', width: 'auto' },
                { text: '排序', field: 'Order', width: 'auto' }
            ],
            pageSize: 10000,
            defaultOrderBy: "Order",
            dataQueryUrl: 'DictionaryValue/Search',
            isAsc: true
        }).import(function () {

            this.handleDetail = function (data) {
                valueForm.load(data)
            }

        }).bind("value-table")

        var valueForm = zdy.form().options({
            fields: [
                { field: 'Id', value: ko.observable() },
                { field: 'DictionaryKey', value: ko.observable() },
                { field: 'Name', value: ko.observable() },
                { field: 'Value', value: ko.observable() },
                { field: 'ParentValue', value: ko.observable() },
                { field: 'Order', value: ko.observable() }
            ],
            dataAddUrl: 'DictionaryValue/Add',
            dataUpdateUrl: 'DictionaryValue/Update',
            dataDeleteUrl: 'DictionaryValue/Delete'
        }).import(function () {

            this.afterAdd = function () {
                this.reset();
                valueTable.search()
            }

            this.afterUpdate = function () {
                this.reset();
                valueTable.search()
            }

            this.afterDelete = function () {
                this.reset();
                valueTable.search()
            }

        }).bind("value-form")
    </script>
}
