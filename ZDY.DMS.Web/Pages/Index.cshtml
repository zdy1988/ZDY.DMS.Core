@page
@model ZDY.DMS.Web.Pages.IndexModel

@{
    Layout = null;
}

<!--[if IE 8]> <html lang="zh-cn" class="ie8 no-js"> <![endif]-->
<!--[if IE 9]> <html lang="zh-cn" class="ie9 no-js"> <![endif]-->
<!--[if !IE]><!-->
<html lang="zh-cn">
<!--<![endif]-->
<!-- BEGIN HEAD -->

<head>
    <meta charset="utf-8" />
    <title>登陆</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <meta content="Preview page of Metronic Admin Theme #3 for " name="description" />
    <meta content="" name="author" />
    @await Html.PartialAsync("_GlobalStyle.cshtml")
    <!-- BEGIN PAGE LEVEL STYLES -->
    <style type="text/css">
        body,
        h1, h2, h3, h4, h5, h6 {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Helvetica, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", SimSun, sans-serif !important;
        }

        .login {
            background-color: #666 !important;
            background-image: url(/media/bg/bg-1.jpg);
            background-position: center bottom;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

            .login .content {
                width: 360px;
                margin: 0px auto;
                padding: 40px 45px 20px;
                -webkit-border-radius: 7px;
                -moz-border-radius: 7px;
                border-radius: 7px;
                background-color: rgba(255, 255, 255, 0.25);
            }

                .login .content h3 {
                    margin-bottom: 25px;
                    font-size: 1.5rem;
                    font-weight: 500;
                    color: #fff;
                }

                .login .content h4 {
                    color: #fff;
                }

                .login .content p,
                .login .content label {
                    color: #fff;
                }

            .login .mt-checkbox > span:after {
                border-color: #fff;
            }

            .login .content .login-form,
            .login .content .forget-form {
                padding: 0px;
                margin: 0px;
            }

            .login .content .form-control {
                background-color: #fff;
                border: 0px;
            }

            .login .content .form-actions {
                background-color: transparent;
                clear: both;
                border: 0px;
                padding: 10px 30px 18px 30px;
                margin-left: -30px;
                margin-right: -30px;
            }

            .login .content .forget-form .form-actions,
            .login .content .register-form .form-actions{
                border: 0;
                margin-bottom: 0;
                padding-bottom: 20px;
            }

            .login .content .form-actions .rememberme {
                margin-top: 12px;
                margin-bottom: 10px;
                display: inline-block;
            }

            .login .content .form-actions .btn {
                margin-top: -4px;
                padding-left: 20px;
                padding-right: 20px;
            }

            .login .content .forget-password {
                margin-top: 25px;
            }

            .login .content .create-account {
                border-top: 1px dotted #eee;
            }

                .login .content .create-account a {
                    display: inline-block;
                    margin-top: 18px;
                    color: #fff;
                }

            /* footer copyright */
            .login .copyright {
                text-align: center;
                margin: 0 auto;
                padding: 18px;
                color: #eee;
                font-size: 13px;
            }
    </style>
    <!-- END PAGE LEVEL STYLES -->
    <link rel="shortcut icon" href="favicon.ico" />
</head>
<!-- END HEAD -->

<body class="login">

    <!-- BEGIN LOGIN -->
    <div class="content" data-model="index">
        <!-- BEGIN LOGIN FORM -->
        <div class="login-form" data-bind="visible: CurrentContent() == 'login'">
            <h3>登陆您的账号</h3>
            <div data-bind="attr: {class: 'alert alert-' + LoginState()}, visible: LoginMessage().length > 0" style="display: none;">
                <button class="close" data-close="alert"></button>
                <span data-bind="text: LoginMessage"></span>
            </div>
            <text-box name="账号" icon="User" field="Account"/>
            <text-box name="密码" kind="Password" icon="Lock" field="Password"/>
            <div class="form-actions">
                <check-box text="记住账号" field="Remember"></check-box>
                <button state="Success" size="Sm" class-names="pull-right" data-bind="{click:handleLogin}"> 登陆 </button>
            </div>
            <div class="create-account">
                <p>
                    <a href="javascript:;" data-content="forget" data-bind="click:setCurrentContent"> 忘记密码 ? </a>
                    <a href="javascript:;" data-content="register" data-bind="click:setCurrentContent" style="float: right;"> 注册账号 </a>
                </p>
            </div>
        </div>
        <!-- END LOGIN FORM -->
        <!-- BEGIN FORGOT PASSWORD FORM -->
        <div class="forget-form" data-bind="visible: CurrentContent() == 'forget'" style="display: none;">
            <h3>忘记密码？</h3>
            <p>
                输入您的电子邮件地址重新设置您的密码。
            </p>
            <text-box name="电子邮件地址" icon="MailForward"/>
            <div class="form-actions">
                <button state="Danger" is-outline="true" size="Sm" text="返回" data-content="login" data-bind="click:setCurrentContent"/>
                <button state="Success" class-names="pull-right" size="Sm" text="提交"/>
            </div>
        </div>
        <!-- END FORGOT PASSWORD FORM -->
        <!-- BEGIN REGISTRATION FORM -->
        <div class="register-form" data-bind="visible: CurrentContent() == 'register'" style="display: none;">
            <h3>注册账号</h3>
            <text-box name="手机号码" icon="MobilePhone" />
            <text-box name="短信验证码" icon="Lock" />
            <div class="form-group">
                <check-box text="我同意"></check-box>
                <a href="javascript:;">
                    服务条款
                </a> 和
                <a href="javascript:;">
                    隐私政策
                </a>
                <div id="register_tnc_error"> </div>
            </div>
            <div class="form-actions">
                <button state="Danger" is-outline="true" size="Sm" text="返回" data-content="login" data-bind="click:setCurrentContent" />
                <button state="Success" class-names="pull-right" size="Sm" text="提交" />
            </div>
        </div>
        <!-- END REGISTRATION FORM -->
    </div>
    <!-- END LOGIN -->
    <!-- BEGIN COPYRIGHT -->
    <div class="copyright"> 2018 - @DateTime.Now.Year &copy; ZDYLA - DATA MANAGER. </div>
    <!-- END COPYRIGHT -->
    <canvas id="background-canvas"></canvas>

    @await Html.PartialAsync("_GlobalScript.cshtml")
    <script type="text/javascript">
        (function () {
            var lastTime = 0;
            var vendors = ['ms', 'moz', 'webkit', 'o'];
            for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
                window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
                window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']
                    || window[vendors[x] + 'CancelRequestAnimationFrame'];
            }

            if (!window.requestAnimationFrame)
                window.requestAnimationFrame = function (callback, element) {
                    var currTime = new Date().getTime();
                    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                    var id = window.setTimeout(function () { callback(currTime + timeToCall); },
                        timeToCall);
                    lastTime = currTime + timeToCall;
                    return id;
                };

            if (!window.cancelAnimationFrame)
                window.cancelAnimationFrame = function (id) {
                    clearTimeout(id);
                };
        }());

        (function () {

            var width, height, canvas, ctx, circles, target, animateHeader = true;

            // Main
            initHeader();
            addListeners();

            function initHeader() {
                width = window.innerWidth;
                height = window.innerHeight;
                target = { x: 0, y: height };

                canvas = document.getElementById('background-canvas');
                canvas.width = width;
                canvas.height = height;
                canvas.style.position = "absolute";
                canvas.style.top = "0px";
                canvas.style.left = "0px";
                canvas.style.zIndex = "-1000";
                ctx = canvas.getContext('2d');

                // create particles
                circles = [];
                for (var x = 0; x < width * 0.5; x++) {
                    var c = new Circle();
                    circles.push(c);
                }
                animate();
            }

            // Event handling
            function addListeners() {
                window.addEventListener('scroll', scrollCheck);
                window.addEventListener('resize', resize);
            }

            function scrollCheck() {
                if (document.body.scrollTop > height) animateHeader = false;
                else animateHeader = true;
            }

            function resize() {
                width = window.innerWidth;
                height = window.innerHeight;
                canvas.width = width;
                canvas.height = height;
            }

            function animate() {
                if (animateHeader) {
                    ctx.clearRect(0, 0, width, height);
                    for (var i = 0; i < circles.length; i++) {
                        circles[i].draw();
                    }
                }
                requestAnimationFrame(animate);
            }

            // Canvas manipulation
            function Circle() {
                var _this = this;

                // constructor
                (function () {
                    _this.pos = {};
                    init();
                })();

                function init() {
                    _this.pos.x = Math.random() * width;
                    _this.pos.y = height + Math.random() * 100;
                    _this.alpha = 0.1 + Math.random() * 0.3;
                    _this.scale = 0.1 + Math.random() * 0.3;
                    _this.velocity = Math.random();
                }

                this.draw = function () {
                    if (_this.alpha <= 0) {
                        init();
                    }
                    _this.pos.y -= _this.velocity;
                    _this.alpha -= 0.0005;
                    ctx.beginPath();
                    ctx.arc(_this.pos.x, _this.pos.y, _this.scale * 10, 0, 2 * Math.PI, false);
                    ctx.fillStyle = 'rgba(255,255,255,' + _this.alpha + ')';
                    ctx.fill();
                };
            }

        })();
    </script>
    <script type="text/javascript">
        var module = zdy.module().import(function () {

            this.CurrentContent = ko.observable("login")

            this.setCurrentContent = function (data, e) {
                var content = $(e.target).data("content")
                this.CurrentContent(content)
            }

            this.LoginState = ko.observable("success")

            this.LoginMessage = ko.observable("")

            this.Account = ko.observable(Cookies.get("zdy_remember"))

            this.Password = ko.observable()

            this.Remember = ko.observable(Cookies.get("zdy_remember") !== "")

            this.handleLogin = function () {
                var self = this

                self.LoginMessage("正在登录，请稍等...")
                self.LoginState("success")

                var data = {
                    account: this.Account(),
                    password: this.Password()
                }

                zdy.ajaxPostSilent("Auth/GetSecurityToken", data).done(function (rst) {
                    self.LoginMessage("登录成功，跳转中...")

                    var data = rst.Data

                    $.when(zdy.token.set(data.accessToken), zdy.user.set(data.userInfo)).done(function () {
                        if (self.Remember()) {
                            Cookies.set("zdy_remember", self.Account());
                        }
                        else {
                            Cookies.set("zdy_remember", "");
                        }

                        setTimeout(function () {
                            window.location = "/Home/Main";
                        }, 1500);
                    });

                }).fail(function () {
                    var msg = "无法连接到服务器"
                    if (arguments[0].responseJSON != undefined && arguments[0].responseJSON != "") {
                        msg = arguments[0].responseJSON.Message;
                    }
                    self.LoginMessage(msg)
                    self.LoginState("danger")
                })
            }

        }).bind("index")

        $('.login-form input').keypress(function (e) {
            if (e.which == 13) {
                module.handleLogin()
            }
        });
    </script>
</body>
</html>

